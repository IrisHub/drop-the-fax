{"ast":null,"code":"var _jsxFileName = \"/Users/samgorman/src/iris-web/src/signup.js\";\nimport React, { Component } from 'react';\nimport '../components/signup.css';\nimport ConfirmButton from '../components/confirmButton';\nimport validator from 'email-validator'; //refactor into a controlled component \n//on click, go grey\n//or on click, disappear\n//on hover for add, go blue\n//Make long for add button\n\nclass SignUp extends Component {\n  constructor(props) {\n    super(props);\n\n    this.validateEmail = () => {\n      this.setState({\n        emailIsValid: validator.validate(this.state.email)\n      });\n    };\n\n    this.changeHandler = e => {\n      this.setState({\n        email: e.target.value\n      });\n      this.validateEmail();\n    };\n\n    this.submitHandler = e => {\n      e.preventDefault();\n      console.log(\"should input test data\" + this.state);\n      fetch('/api/email', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          \"Email\": this.state.email\n        })\n      });\n      this.setState({\n        copied: true\n      });\n    };\n\n    this.state = {\n      email: \"\",\n      copied: false,\n      emailIsValid: false\n    };\n  }\n\n  render() {\n    const {\n      name\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"SignUpContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.submitHandler,\n      className: \"Form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"SignUpInput\",\n      type: \"text\",\n      placeholder: \"Enter your email                                                              \",\n      value: this.state.email,\n      onChange: this.changeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: this.state.copied ? \"hidden\" : \"SignUpButton\",\n      onClick: this.myClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    }, \" Subscribe\"), this.state.copied ? /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"AfterSubmit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }\n    }, \"All signed up!\")) : null));\n  }\n\n}\n\nexport default SignUp;","map":{"version":3,"sources":["/Users/samgorman/src/iris-web/src/signup.js"],"names":["React","Component","ConfirmButton","validator","SignUp","constructor","props","validateEmail","setState","emailIsValid","validate","state","email","changeHandler","e","target","value","submitHandler","preventDefault","console","log","fetch","method","headers","body","JSON","stringify","copied","render","name","myClick"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,0BAAP;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,SAAP,MAAsB,iBAAtB,C,CAIA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,MAAN,SAAqBH,SAArB,CAA8B;AAE1BI,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAUlBC,aAVkB,GAUF,MAAM;AAClB,WAAKC,QAAL,CAAc;AAACC,QAAAA,YAAY,EAAEN,SAAS,CAACO,QAAV,CAAmB,KAAKC,KAAL,CAAWC,KAA9B;AAAf,OAAd;AAEH,KAbiB;;AAAA,SAelBC,aAfkB,GAeFC,CAAC,IAAI;AACjB,WAAKN,QAAL,CAAc;AAACI,QAAAA,KAAK,EAAEE,CAAC,CAACC,MAAF,CAASC;AAAjB,OAAd;AACA,WAAKT,aAAL;AAEH,KAnBiB;;AAAA,SAqBlBU,aArBkB,GAqBFH,CAAC,IAAI;AACjBA,MAAAA,CAAC,CAACI,cAAF;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAA0B,KAAKT,KAA3C;AACAU,MAAAA,KAAK,CAAC,YAAD,EAAe;AAChBC,QAAAA,MAAM,EAAE,MADQ;AAEhBC,QAAAA,OAAO,EAAE;AACL,oBAAU,kBADL;AAEL,0BAAgB;AAFX,SAFO;AAMhBC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjB,mBAAS,KAAKf,KAAL,CAAWC;AADH,SAAf;AANU,OAAf,CAAL;AAUI,WAAKJ,QAAL,CAAc;AAACmB,QAAAA,MAAM,EAAE;AAAT,OAAd;AAEP,KApCiB;;AAEV,SAAKhB,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,EADE;AAETe,MAAAA,MAAM,EAAE,KAFC;AAGTlB,MAAAA,YAAY,EAAE;AAHL,KAAb;AAMH;;AA8BLmB,EAAAA,MAAM,GAAG;AACL,UAAM;AAACC,MAAAA;AAAD,QAAS,KAAKlB,KAApB;AACA,wBACI;AAAK,MAAA,SAAS,EAAG,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEA;AAAM,MAAA,QAAQ,EAAG,KAAKM,aAAtB;AAAqC,MAAA,SAAS,EAAG,MAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,SAAS,EAAG,aAAnB;AAAiC,MAAA,IAAI,EAAG,MAAxC;AAA+C,MAAA,WAAW,EAAG,gFAA7D;AACA,MAAA,KAAK,EAAG,KAAKN,KAAL,CAAWC,KADnB;AAC0B,MAAA,QAAQ,EAAI,KAAKC,aAD3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAII;AAAQ,MAAA,IAAI,EAAG,QAAf;AAAwB,MAAA,SAAS,EAAI,KAAKF,KAAL,CAAWgB,MAAX,GAAoB,QAApB,GAA8B,cAAnE;AAAmF,MAAA,OAAO,EAAI,KAAKG,OAAnG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ,EAMC,KAAKnB,KAAL,CAAWgB,MAAX,gBACO,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAK,MAAA,SAAS,EAAG,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADA,CADP,GAIU,IAVX,CAFA,CADJ;AAkBH;;AA5DyB;;AA+D5B,eAAevB,MAAf","sourcesContent":["import React, {Component} from 'react'; \nimport '../components/signup.css';\nimport ConfirmButton from '../components/confirmButton';\nimport validator from 'email-validator'\n\n\n\n//refactor into a controlled component \n//on click, go grey\n//or on click, disappear\n//on hover for add, go blue\n//Make long for add button\n\nclass SignUp extends Component{\n\n    constructor(props){\n        super(props);\n            this.state = {\n                email: \"\",\n                copied: false,\n                emailIsValid: false,\n\n            };\n        }\n\n    validateEmail = () => {\n        this.setState({emailIsValid: validator.validate(this.state.email)})\n\n    }\n\n    changeHandler = e => {\n        this.setState({email: e.target.value});\n        this.validateEmail()\n\n    }\n\n    submitHandler = e => {\n        e.preventDefault()\n        console.log(\"should input test data\" +this.state)\n        fetch('/api/email', {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                \"Email\": this.state.email\n            })\n            })\n            this.setState({copied: true});\n\n    }\n     \n    render() {\n        const {name} = this.state\n        return (\n            <div className = \"SignUpContainer\"> \n    \n            <form onSubmit= {this.submitHandler} className = \"Form\">\n                <input className = \"SignUpInput\" type = \"text\" placeholder = \"Enter your email                                                              \" \n                value ={this.state.email} onChange = {this.changeHandler}>\n                </input>\n                <button type = \"submit\" className = {this.state.copied ? \"hidden\": \"SignUpButton\"} onClick = {this.myClick}> Subscribe\n                </button>\n            {this.state.copied ? \n                    <React.Fragment>\n                    <div className = \"AfterSubmit\">All signed up!</div>\n                      </React.Fragment>\n                     : null}\n                        </form>\n\n            </div>\n        );\n    }\n  }\n  \n  export default SignUp;\n"]},"metadata":{},"sourceType":"module"}